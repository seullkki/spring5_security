<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
      
   <http> 
   	  <intercept-url pattern="/login/loginForm" access="permitAll" />
   	  <intercept-url pattern="/" access="permitAll" />
   	  
   	  <intercept-url pattern="/user/**" access="permitAll" />
   	  
      <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />   
      <intercept-url pattern="/**" access="hasAnyRole('ADMIN, USER')" />   
      
      
     <!--  로그인 페이지 커스텀화 하기 -->
      <form-login login-page="/login/loginForm"
      			  default-target-url="/"
                  authentication-failure-url="/login/loginForm?error"
                  username-parameter="id"
                  password-parameter="password"
      />
      
      <logout logout-url="/logout" logout-success-url="/" />
      
      <!-- 403 에러 처리 -->
      <access-denied-handler error-page="/login/accessDenied" />
      
   </http> 
   
	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean> 
    
    <!-- 암호화를 위해 필요한 객체 1 -->
     <beans:bean id="customNoOpPasswordEncoder" class="edu.bit.ex.security.CustomNoOpPasswordEncoder"/>
   
    <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
   
   
	<!-- provider  -->
   <authentication-manager>
      <authentication-provider>
       <!-- 암호화를 위해 필요한 부분 : 사용하겠다는 의미 -->
         <password-encoder ref="bcryptPasswordEncoder"/>
           <jdbc-user-service 
              data-source-ref="dataSource"
			   role-prefix=""
               users-by-username-query="select username, password, enabled from users where username = ?"
               authorities-by-username-query="select username, authority from authorities where username = ?"
           /> 
           

      </authentication-provider>
   </authentication-manager> 
    
</beans:beans>